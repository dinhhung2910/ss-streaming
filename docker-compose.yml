version: '3.6'

networks:
  bridge:
    driver: bridge

services:

  # Cấu hình cho database
  # Port 27017
  mongo:
    image: mongo
    restart: always
    ports: 
      - 27017:27017
    volumes:
      - ./collections:/data/db/
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: incorrect
    networks: 
      bridge:
        aliases:
          - mongo
  
  # Giao diện web truy cập mongodb
  # Port 27018
  mongo-express:
    image: mongo-express
    depends_on: 
      - mongo
    restart: always
    ports:
      - 27018:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: incorrect

  # Cấu hình cho zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      bridge:
        aliases:
          - zookeeper
    
  # Cấu hình cho kafka
  # Listen cho các docker container khác tại địa chỉ kafka:9092
  # Listen cho các ứng dụng bên ngoài docker (ví dụ dùng khi dev) tại localhost:29092
  kafka:
    image: wurstmeister/kafka:latest
    ports: 
      - 29092:29092
      - 32181:32181
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      JMX_PORT: 9999
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    networks:
      bridge:
        aliases:
          - kafka

  # Giao diện web quản lý cho kafka
  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    environment:
      ZK_HOSTS: "zookeeper:32181"
      JMX_PORT: 9999
    ports:
      - 9000:9000
    networks:
      - bridge

  # Kafka consumer flink
  # Sử dụng docker image vừa được build
  kafka-consumer-flink:
        image: kafka-flink
        depends_on:
          - kafka
          - elasticsearch
        environment:
          EXAMPLE_GOAL: "consumer.flink"
          EXAMPLE_KAFKA_TOPIC: "example"
          EXAMPLE_KAFKA_SERVER: "kafka:9092"
          EXAMPLE_ZOOKEEPER_SERVER: "zookeeper:32181"
          EXAMPLE_ELASTIC_SERVER: "elasticsearch"
          EXAMPLE_MONGODB_SERVER: "mongo"
        networks:
          - bridge

  # Index data
  elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
        environment:
          - cluster.name=docker-cluster
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
          - discovery.type=single-node
        ports:
          - "9200:9200"
          - "9300:9300"
        ulimits:
          memlock:
            soft: -1
            hard: -1
          nofile:
            soft: 65536
            hard: 65536
        networks: 
          bridge:
            aliases:
              - elasticsearch

  # Visualize data
  kibana:
        image: docker.elastic.co/kibana/kibana:7.6.0
        ports:
          - "5601:5601"
        networks: 
          - bridge